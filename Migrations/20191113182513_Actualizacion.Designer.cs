// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication21.sakila;

namespace WebApplication21.Migrations
{
    [DbContext(typeof(new_schemaContext))]
    [Migration("20191113182513_Actualizacion")]
    partial class Actualizacion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<int>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebApplication21.sakila.Caracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cod");

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.Property<int>("FactorId");

                    b.Property<DateTime>("FechaCreate");

                    b.Property<int>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("FactorId");

                    b.HasIndex("UsersId");

                    b.ToTable("Caracteristicas");
                });

            modelBuilder.Entity("WebApplication21.sakila.Control", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Calificacion");

                    b.Property<string>("Cargo");

                    b.Property<int>("ControlBaseId");

                    b.Property<int>("ControlMainId");

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.Property<int?>("EvaluacionId");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Formalizacion");

                    b.Property<string>("Grado");

                    b.Property<bool>("IsMain");

                    b.Property<string>("Oportunidad");

                    b.Property<string>("Periodicidad");

                    b.Property<int>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("EvaluacionId");

                    b.HasIndex("UsersId");

                    b.ToTable("Control");
                });

            modelBuilder.Entity("WebApplication21.sakila.ControlRiesgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Calificacion");

                    b.Property<string>("Cargo");

                    b.Property<int>("ControlId");

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.Property<DateTime>("Fecha");

                    b.Property<string>("Formalizacion");

                    b.Property<string>("Grado");

                    b.Property<string>("Oportunidad");

                    b.Property<string>("Periodicidad");

                    b.Property<int>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("ControlId");

                    b.HasIndex("UsersId");

                    b.ToTable("ControlRiesgos");
                });

            modelBuilder.Entity("WebApplication21.sakila.Evaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CaracteristicaId");

                    b.Property<string>("Descripcion");

                    b.Property<int>("FactorId");

                    b.Property<DateTime>("FechaCreate");

                    b.Property<string>("Impacto");

                    b.Property<string>("Probabilidad");

                    b.Property<int>("Puntaje");

                    b.Property<string>("RiesgoInherente");

                    b.Property<string>("RiesgoResiual");

                    b.Property<int>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("CaracteristicaId");

                    b.HasIndex("FactorId");

                    b.HasIndex("UsersId");

                    b.ToTable("Evaluacions");
                });

            modelBuilder.Entity("WebApplication21.sakila.Factor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<bool>("Estado");

                    b.HasKey("Id");

                    b.ToTable("Factors");
                });

            modelBuilder.Entity("WebApplication21.sakila.Identificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Calificacion");

                    b.Property<int>("CaracteristicaId");

                    b.Property<string>("Descripcion");

                    b.Property<int>("IdentificacionBaseId");

                    b.Property<int>("IdentificacionMainId");

                    b.Property<string>("Impacto");

                    b.Property<bool>("IsMain");

                    b.Property<string>("Probabilidad");

                    b.Property<int>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("CaracteristicaId");

                    b.HasIndex("UsersId");

                    b.ToTable("Identificacions");
                });

            modelBuilder.Entity("WebApplication21.sakila.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Description");

                    b.Property<bool>("IsApproved");

                    b.Property<bool>("IsMain");

                    b.Property<string>("PublicId");

                    b.Property<string>("Url");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("WebApplication21.sakila.Riesgo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Calificacion");

                    b.Property<int>("CaracteristicaId");

                    b.Property<string>("Descripcion");

                    b.Property<string>("Impacto");

                    b.Property<string>("Probabilidad");

                    b.Property<string>("RiesgoInherente");

                    b.Property<string>("RiesgoResidual");

                    b.Property<int>("UsersId");

                    b.HasKey("Id");

                    b.HasIndex("CaracteristicaId");

                    b.HasIndex("UsersId");

                    b.ToTable("Riesgos");
                });

            modelBuilder.Entity("WebApplication21.sakila.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("WebApplication21.sakila.UserRole", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("WebApplication21.sakila.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("City");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Country");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("Gender");

                    b.Property<string>("Interests");

                    b.Property<string>("Introduction");

                    b.Property<string>("KnownAs");

                    b.Property<DateTime>("LastActive");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("LookingFor");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("PublicId");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("Url");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("WebApplication21.sakila.Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("WebApplication21.sakila.Users")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("WebApplication21.sakila.Users")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("WebApplication21.sakila.Users")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication21.sakila.Caracteristica", b =>
                {
                    b.HasOne("WebApplication21.sakila.Factor", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication21.sakila.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication21.sakila.Control", b =>
                {
                    b.HasOne("WebApplication21.sakila.Evaluacion")
                        .WithMany("Controls")
                        .HasForeignKey("EvaluacionId");

                    b.HasOne("WebApplication21.sakila.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication21.sakila.ControlRiesgo", b =>
                {
                    b.HasOne("WebApplication21.sakila.Control", "Control")
                        .WithMany()
                        .HasForeignKey("ControlId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication21.sakila.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication21.sakila.Evaluacion", b =>
                {
                    b.HasOne("WebApplication21.sakila.Caracteristica", "Caracteristica")
                        .WithMany()
                        .HasForeignKey("CaracteristicaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication21.sakila.Factor", "Factor")
                        .WithMany()
                        .HasForeignKey("FactorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication21.sakila.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication21.sakila.Identificacion", b =>
                {
                    b.HasOne("WebApplication21.sakila.Caracteristica", "Caracteristica")
                        .WithMany("Identificacions")
                        .HasForeignKey("CaracteristicaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication21.sakila.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication21.sakila.Photo", b =>
                {
                    b.HasOne("WebApplication21.sakila.Users", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication21.sakila.Riesgo", b =>
                {
                    b.HasOne("WebApplication21.sakila.Caracteristica", "Caracteristica")
                        .WithMany()
                        .HasForeignKey("CaracteristicaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication21.sakila.Users", "Users")
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplication21.sakila.UserRole", b =>
                {
                    b.HasOne("WebApplication21.sakila.Role", "Roles")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebApplication21.sakila.Users", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
